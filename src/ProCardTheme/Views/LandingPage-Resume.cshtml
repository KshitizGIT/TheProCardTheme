@using System.Linq
@model OrchardCore.Flows.ViewModels.BagPartViewModel
@inject OrchardCore.ContentManagement.Display.IContentItemDisplayManager ContentItemDisplayManager
<section class="pt-page" data-id="resume">
    <div class="section-inner custom-page-content">
        <div class="page-header color-1">
            <h2> Resume</h2>
        </div>
        <div class="page-content">

            <div class="row">
                <div class="col-sm-6 col-md-6 col-lg-6">
                    <div class="block">
                        <div class="block-title">
                            <h3> Education</h3>
                        </div>
                        <div class="timeline">
                            @foreach (var education in Model.ContentItems.Where(c => c.ContentType == "Education"))
                            {
                                var itemContent = await ContentItemDisplayManager.BuildDisplayAsync(education, Model.BuildPartDisplayContext.Updater, "Summary", Model.BuildPartDisplayContext.GroupId);
                                @await DisplayAsync(itemContent);
                            }
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 col-md-6 col-lg-6">
                    <div class="block">
                        <div class="block-title">
                            <h3> Experience</h3>
                        </div>
                        <div class="timeline">
                            @foreach (var experience in Model.ContentItems.Where(c => c.ContentType == "Experience"))
                            {
                                var itemContent = await ContentItemDisplayManager.BuildDisplayAsync(experience, Model.BuildPartDisplayContext.Updater, "Summary", Model.BuildPartDisplayContext.GroupId);
                                @await DisplayAsync(itemContent);
                            }
                        </div>
                    </div>
                </div>
            </div>

            @{
                var skills = Model.ContentItems.Where(c => c.ContentType == "Skill")
                        .GroupBy(c => c.ContentItem.Content.Skill.Type.Text.Value);
            }
            <div class="row">
                @foreach (var skill in skills)
                {
                    <div class="col-sm-6 col-md-6 col-lg-6">
                        <div class="block">
                            <div class="block-title">
                                <h3> @skill.Key <span> Skills</span> </h3>
                            </div>

                            <div class="skills-info">
                                @foreach (var s in skill)
                                {
                                    <h4>@s.ContentItem.Content.Skill.Name.Text.Value</h4>
                                    <div class="skill-container">
                                        <div class="skill-percentage skill-@s.ContentItem.Content.Skill.Proficiency.Value"> </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            <!-- Download Resume Button -->
            @{
                var contentItem = await @Orchard.GetContentItemByHandleAsync("slug:default-landing-page");

            }
            <div class="row">
                <div class="col-sm-12 col-md-12 col-lg-12">
                    <div class="block">
                        <div class="center download-resume">
                            <a asset-href="@contentItem.ContentItem.Content.PersonPart.CV.Paths[0]" class="btn btn-secondary"> Download Resume</a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End of Download Resume Button -->
        </div>
    </div>
</section>
<!-- End of Resume Subpage -->
